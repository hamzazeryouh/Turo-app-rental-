// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Turo.Infrastructure.Persistence;

#nullable disable

namespace Turo.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250117135430_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Turo.Domain.Entities.AgencyLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgencyId")
                        .HasColumnType("int");

                    b.Property<string>("AgencyId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("OperatingHours")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId1");

                    b.ToTable("AgencyLocations");
                });

            modelBuilder.Entity("Turo.Domain.Entities.Booking", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CarId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RenterId")
                        .HasColumnType("int");

                    b.Property<string>("RenterId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RowVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CarId1");

                    b.HasIndex("RenterId1");

                    b.HasIndex("UserId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("Turo.Domain.Entities.Car", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AvailabilityEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AvailabilityStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CarType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EngineCapacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FuelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasAirConditioning")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBackupCamera")
                        .HasColumnType("bit");

                    b.Property<bool>("HasBluetooth")
                        .HasColumnType("bit");

                    b.Property<bool>("HasGPS")
                        .HasColumnType("bit");

                    b.Property<bool>("HasHeatedSeats")
                        .HasColumnType("bit");

                    b.Property<bool>("HasParkAssist")
                        .HasColumnType("bit");

                    b.Property<bool>("HasRemoteStart")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSunroof")
                        .HasColumnType("bit");

                    b.Property<string>("InsuranceDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsuranceExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsurancePolicyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InsuranceProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDiscountApplicable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLuxury")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPetFriendly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSmokingAllowed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Mileage")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NeedsMaintenance")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RegistrationDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RowVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<string>("SecurityFeatures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialPricing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transmission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("Turo.Domain.Entities.CarPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CarId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId1");

                    b.ToTable("CarPhoto");
                });

            modelBuilder.Entity("Turo.Domain.Entities.DiscountOffer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AgencyId")
                        .HasColumnType("int");

                    b.Property<string>("AgencyId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfferDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RowVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId1");

                    b.ToTable("DiscountOffer");
                });

            modelBuilder.Entity("Turo.Domain.Entities.IndividualUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RowVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IndividualUser");
                });

            modelBuilder.Entity("Turo.Domain.Entities.MaintenanceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CarId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServicePerformed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceProvider")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId1");

                    b.ToTable("MaintenanceRecord");
                });

            modelBuilder.Entity("Turo.Domain.Entities.Review", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AgencyId")
                        .HasColumnType("int");

                    b.Property<string>("AgencyId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CarId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IndividualUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("RowVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId1");

                    b.HasIndex("CarId1");

                    b.HasIndex("IndividualUserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("Turo.Domain.Entities.Staff", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AgencyId")
                        .HasColumnType("int");

                    b.Property<string>("AgencyId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RowVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgencyId1");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("Turo.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RowVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Turo.Domain.Entities.Agency", b =>
                {
                    b.HasBaseType("Turo.Domain.Entities.User");

                    b.Property<int>("AvailableCars")
                        .HasColumnType("int");

                    b.Property<double>("AverageRating")
                        .HasColumnType("float");

                    b.Property<string>("BusinessHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CancellationPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DailyRentalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DamagePolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateFounded")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsurancePolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("PricingStrategy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalCars")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Agency");
                });

            modelBuilder.Entity("Turo.Domain.Entities.AgencyLocation", b =>
                {
                    b.HasOne("Turo.Domain.Entities.Agency", "Agency")
                        .WithMany("Locations")
                        .HasForeignKey("AgencyId1");

                    b.Navigation("Agency");
                });

            modelBuilder.Entity("Turo.Domain.Entities.Booking", b =>
                {
                    b.HasOne("Turo.Domain.Entities.Car", "Car")
                        .WithMany("Bookings")
                        .HasForeignKey("CarId1");

                    b.HasOne("Turo.Domain.Entities.IndividualUser", "Renter")
                        .WithMany("Bookings")
                        .HasForeignKey("RenterId1");

                    b.HasOne("Turo.Domain.Entities.User", null)
                        .WithMany("Bookings")
                        .HasForeignKey("UserId");

                    b.Navigation("Car");

                    b.Navigation("Renter");
                });

            modelBuilder.Entity("Turo.Domain.Entities.Car", b =>
                {
                    b.HasOne("Turo.Domain.Entities.User", "Owner")
                        .WithMany("CarsOwned")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Turo.Domain.Entities.CarPhoto", b =>
                {
                    b.HasOne("Turo.Domain.Entities.Car", "Car")
                        .WithMany("Photos")
                        .HasForeignKey("CarId1");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("Turo.Domain.Entities.DiscountOffer", b =>
                {
                    b.HasOne("Turo.Domain.Entities.Agency", "Agency")
                        .WithMany("DiscountOffers")
                        .HasForeignKey("AgencyId1");

                    b.Navigation("Agency");
                });

            modelBuilder.Entity("Turo.Domain.Entities.MaintenanceRecord", b =>
                {
                    b.HasOne("Turo.Domain.Entities.Car", "Car")
                        .WithMany("MaintenanceRecords")
                        .HasForeignKey("CarId1");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("Turo.Domain.Entities.Review", b =>
                {
                    b.HasOne("Turo.Domain.Entities.Agency", "Agency")
                        .WithMany()
                        .HasForeignKey("AgencyId1");

                    b.HasOne("Turo.Domain.Entities.Car", "Car")
                        .WithMany("Reviews")
                        .HasForeignKey("CarId1");

                    b.HasOne("Turo.Domain.Entities.IndividualUser", null)
                        .WithMany("Reviews")
                        .HasForeignKey("IndividualUserId");

                    b.HasOne("Turo.Domain.Entities.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId1");

                    b.Navigation("Agency");

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Turo.Domain.Entities.Staff", b =>
                {
                    b.HasOne("Turo.Domain.Entities.Agency", "Agency")
                        .WithMany("StaffMembers")
                        .HasForeignKey("AgencyId1");

                    b.Navigation("Agency");
                });

            modelBuilder.Entity("Turo.Domain.Entities.Car", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("MaintenanceRecords");

                    b.Navigation("Photos");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Turo.Domain.Entities.IndividualUser", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Turo.Domain.Entities.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("CarsOwned");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Turo.Domain.Entities.Agency", b =>
                {
                    b.Navigation("DiscountOffers");

                    b.Navigation("Locations");

                    b.Navigation("StaffMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
